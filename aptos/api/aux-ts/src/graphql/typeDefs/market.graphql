type Market {
  name: String!
  baseCoinInfo: CoinInfo!
  quoteCoinInfo: CoinInfo!
  lotSize: Float!
  tickSize: Float!
  lotSizeDecimals: String!
  tickSizeDecimals: String!
  lotSizeString: String!
  tickSizeString: String!
  orderbook: Orderbook!
  lastTradePrice: Float
  openOrders(owner: Address): [Order!]!
  orderHistory(owner: Address): [Order!]!
  tradeHistory(owner: Address): [Trade!]!
  isRoundLot(quantity: String!): Boolean!
  isRoundTick(quantity: String!): Boolean!
  pythRating(price: Float!, side: Side!): PythRating
  bars(
    resolution: Resolution!
    from: Int
    to: Int
    countBack: Int
    firstDataRequest: Boolean
  ): [Bar!]!
  high24h: Float
  low24h: Float
  volume24h: Float
}

type PythRating {
  price: Float!
  message: String!
  color: RatingColor!
}

enum RatingColor {
  RED
  YELLOW
  GREEN
}

type Orderbook {
  baseCoinType: String!
  quoteCoinType: String!
  bids: [Level!]!
  asks: [Level!]!
}

type Level {
  price: Float!
  quantity: Float!
}

enum Side {
  BUY
  SELL
}

enum OrderType {
  LIMIT
  FILL_OR_KILL
  IMMEDIATE_OR_CANCEL
  POST_ONLY
  PASSIVE_JOIN
}

enum STPActionType {
  CANCEL_PASSIVE
  CANCEL_AGGRESSIVE
  CANCEL_BOTH
}

enum OrderStatus {
  OPEN
  FILLED
  CANCELED
}

enum Resolution {
  SECONDS_15
  MINUTES_1
  MINUTES_5
  MINUTES_15
  HOURS_1
  HOURS_4
  DAYS_1
  WEEKS_1
}

type Order {
  baseCoinType: String!
  quoteCoinType: String!
  orderId: ID!
  owner: Address!
  orderType: OrderType!
  orderStatus: OrderStatus!
  side: Side!
  price: Float!
  quantity: Float!
  value: Float!
  auxBurned: Float!
  time: Timestamp!
}

type Trade {
  baseCoinType: String!
  quoteCoinType: String!
  side: Side!
  price: Float!
  quantity: Float!
  value: Float!
  time: Timestamp!
}

type LastTradePrice {
  baseCoinType: String!
  quoteCoinType: String!
  price: Float!
}

type Bar {
  baseCoinType: String!
  quoteCoinType: String!
  time: Timestamp!
  ohlcv: Ohlcv
}

type Ohlcv {
  open: Float!
  high: Float!
  low: Float!
  close: Float!
  volume: Float!
}

type High24h {
  baseCoinType: String!
  quoteCoinType: String!
  high: Float!
}

type Low24h {
  baseCoinType: String!
  quoteCoinType: String!
  low: Float!
}

type Volume24h {
  baseCoinType: String!
  quoteCoinType: String!
  volume: Float!
}

input MarketInput {
  baseCoinType: String!
  quoteCoinType: String!
}

input CreateMarketInput {
  marketInput: MarketInput!
  baseLotSize: Int!
  quoteLotSize: Int!
}

input PlaceOrderInput {
  marketInput: MarketInput!
  sender: Address!
  side: Side!
  limitPrice: String!
  quantity: String!
  auxToBurn: Float!
  clientOrderId: Int!
  orderType: OrderType!
}

input CancelOrderInput {
  marketInput: MarketInput!
  sender: Address!
  orderId: ID!
}
